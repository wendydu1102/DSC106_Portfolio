/* Step 2.4: Accent color and hover styles */
html {
    /* Define accent color on :root (html) */
    --color-accent: oklch(65% 50% 0);
    /* Specify accent-color for form elements */
    accent-color: var(--color-accent);
    /* Base font settings from Lab 1/Context */
    font-family: sans-serif;
    line-height: 1.5;
}

/* Step 1: Prevent content from getting too wide and center it */
body {
    max-width: 100ch;
    /* margin-inline: max(1em, (100% - 100ch) / 2); centers content with a minimum padding of 1em */
    margin-inline: max(1em, (100% - 100ch) / 2);
}

/* Step 4.4: Finishing touches - Headings Typography */
h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
    text-wrap: balance;
}

/* Step 4.4: Make H1 significantly larger */
h1 {
    font-size: 400%;
}

/*
 * Step 2: Styling the navigation bar
 */

/* Step 2.2: Use Flexbox to lay out the navigation */
nav {
    display: flex;
    /* Step 2.3: Separate nav from content below */
    margin-bottom: 2em;
    /* Step 2.3: Add bottom border to visually separate */
    border-bottom: 1px solid oklch(80% 3% 200);
}

/* Step 2.1: Getting <ul> and <li> out of the way */
nav ul,
nav li {
    display: contents;
}

/* Step 2.2: Make <a> elements take up the same space */
nav a {
    flex: 1;
    /* Step 2.3: Remove default link styles and center text */
    text-decoration: none;
    color: inherit;
    text-align: center;
    /* Step 2.3: Add spacing */
    padding: 0.5em;
}

/* Step 2.4: Accent color and hover styles */
nav a:hover {
    /* Apply the same thick border as current link with accent color */
    border-bottom: 0.4em solid var(--color-accent);
    /* Counter the border height increase */
    padding-bottom: calc(0.5em - 0.4em);
    /* Hover background color (light color with same accent hue) */
    background-color: oklch(from var(--color-accent) 95% 5% h);
}

/* Step 2.3: Style the current page link */
nav a.current {
    /* Thick bottom border with a cool gray */
    border-bottom: 0.4em solid oklch(80% 3% 200);
    /* Counter the border height increase by reducing padding-bottom */
    padding-bottom: calc(0.5em - 0.4em);
}

/*
 * Step 3: Contact form layout
 */

/* Step 3.1: Integrate typography for form controls */
input, textarea, button {
    font: inherit;
}

/* Step 3.3: Grid layout on the form container */
form {
    display: grid;
    /* Two columns: one as wide as its content (label), one taking the rest of the space (input) */
    grid-template-columns: auto 1fr;
    /* Add spacing between grid items */
    gap: 1em;
}

/* Step 3.3: Make the labels and button span a whole row */
form label,
form button {
    /* Span from the first column (1) to the last column (-1), which is both columns */
    grid-column: 1 / -1;
}

/* Step 3.3: Implement subgrid for the label content to align with form columns */
form label {
    display: grid;
    /* The label's internal grid uses the form's column tracks */
    grid-template-columns: subgrid;
}

/* The actual input fields need to span the second column (1fr track) inside the label subgrid */
form label input,
form label textarea {
    /* Span from the second column (2) to the last column (-1) */
    grid-column: 2 / -1;
}

/* The text of the label will automatically be placed in the first column (auto track) */
/* The button does not use subgrid, it just spans two columns of the main form grid */

/*
 * Step 4: Style your projects page
 */

.projects {
    display: grid;
    /* Step 4.2: Responsive grid with a minimum item width of 15em */
    grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
    /* Step 4.3: Space out the articles nicely */
    gap: 1em;
}

.projects article {
    display: grid;
    /* Step 4.3: Use subgrid for rows to align content across different articles */
    grid-template-rows: subgrid;
    /* Step 4.3: Make each article span 3 rows (or as many as you need to align images/text) */
    grid-row: span 3;
    padding: 1em;
    border: 1px solid #eee; /* Optional: for visual separation */
}

/* Step 4.3: Remove excessive spacing on <h2> */
.projects article h2 {
    margin: 0;
}

.projects article img {
    /* Ensure images fill the available width gracefully */
    width: 100%;
    height: auto;
    /* Optional: for better fit on grid items */
    display: block;
    object-fit: cover;
}

/* Step 5: Style your CV - minimal freeform styling */
.cv-section h2 {
    color: var(--color-accent);
    border-bottom: 2px solid #eee;
    padding-bottom: 0.2em;
}
.cv-section ul {
    list-style: square;
}
.job-title {
    font-weight: bold;
}